using System;

namespace Constructors
{   
    //Описание класа с коснструктором:
    class MyClass
    {
        //Закрытие поля:
        public int num;     //Целочисленонное поле
        public char symb;   //Символьное поле
        public string txt;  //Текстовое поле
        // Открытый метод для отображения значений полей:
        public void show()
        {
            Console.WriteLine("Поля: {0},\'{1}\' и \"{2}\" ", num,symb,txt);
        }
        //Конструктор без аргументов:
        public MyClass()
        {
            //Значение полей:
            num = 100;
            symb = 'A';
            txt = "Красный";
        }
        //Конструктор с одним целочисленным аргументом:
        public MyClass(int n)
        {
            // Значения:
            num = n;
            symb = 'B';
            txt = "Желтый";
        }
        //Коструктор с двумя аргументами:
        public MyClass(int n, char s)
        {
            //Значения полей:
            num = n;
            symb = s;
            txt = "Зеленый";
        }
        //Конструктор с тремя аргументами:
        public MyClass(int n, char s, string t)
        {
            //Значения полей:
            num = n;
            symb = s;
            txt = t;
        }
        
        //Конструктор с одним тектовымаргументом:
        public MyClass(string t)
        {
            //Значения полей:
            num = 0;
            symb = 'z';
            txt = t;
        }
    }
    //Класс с главным методом:
     class Program
    {
        static void Main()
        {
            // Создание объектов.
            // Вызывается конструктор без аргументов:
            MyClass A=new MyClass();
            // Проверяются значения полей объекта:
            A.show();
            // Вызывается конструктор с целочисленным аргументом:
            MyClass B=new MyClass(200);
            // Проверяются значения полей объекта:
            B.show();
            // Вызывается конструктор с двумя аргументами:
            MyClass C=new MyClass(300,'C');
            // Проверяются значения полей объекта:
            C.show();
            // Вызывается конструктор с тремя аргументами:
            MyClass D=new MyClass(400,'D',"Синий");
            // Проверяются значения полей объекта:
            D.show();
            // Вызывается конструктор с символьным аргументом:
            MyClass F=new MyClass('A');
            // Проверяются значения полей объекта:
            F.show();
            // Вызывается конструктор с текстовым аргументом:
            MyClass G=new MyClass("Серый");
            // Проверяются значения полей объекта:
            G.show();
        }
    }
}